# name: Deploy to AWS Server

# on:
#   push:
#     branches:
#       - main # Ejecutar PRUEBA 2 para ver si actualiza el archivo

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Setup SSH
#         run: |
#           mkdir -p ~/.ssh
#           echo "${{secrets.AWS_SSH_KEY }}" > ~/.ssh/id_rsa
#           chmod 600 ~/.ssh/id_rsa

#       - name: Deploy to AWS
#         run: |
#           ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ubuntu@98.81.77.253 "
#             cd LMOPS/ &&
#             git pull origin main
#           "

name: Deploy to AWS Server with Tests

on:
  push:
    branches:
      - main # Ejecutar cuando haya un push en la rama principal

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: List files in repository
        run: ls -R

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9" # Cambia a la versión de Python que necesites

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Asegúrate de tener un archivo `requirements.txt`

      - name: Run tests
        run: |
          cd QA/
          python qa.py
        # Si esta etapa falla, GitHub Actions no continuará al despliegue.

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Deploy to AWS
        if: success() # Solo se ejecutará si la etapa de prueba pasa
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ubuntu@98.81.77.253 "
            sudo bash -c '
                cd LMOPS &&
                git pull origin main &&
                source .venv/bin/activate &&
                cd front &&
                sudo fuser -k 80/tcp || true &&
                nohup streamlit run front.py --server.port 80
            '
            "
